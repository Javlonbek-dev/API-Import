## Autogenerated by Scribe. DO NOT MODIFY.

name: Brand
description: |-

  APIs related to brands
endpoints:
  -
    httpMethods:
      - GET
    uri: api/brand
    metadata:
      groupName: Brand
      groupDescription: |-

        APIs related to brands
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "data": [
                   {
                       "id": 1,
                       "name": "BrandName1",
                       "image": "images/brand1.jpg"
                   },
                   {
                       "id": 2,
                       "name": "BrandName2",
                       "image": "images/brand2.jpg"
                   },
                   ...
               ]
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/brand
    metadata:
      groupName: Brand
      groupDescription: |-

        APIs related to brands
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the brand.'
        required: true
        example: Ishonch
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image of the brand.'
        required: true
        example: '"images/1713348086.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: Ishonch
      image: '"images/1713348086.jpg"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "Brand created successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/brand/{id}'
    metadata:
      groupName: Brand
      groupDescription: |-

        APIs related to brands
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "id": 1,
               "name": "BrandName",
               "image": "images/brand.jpg"
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/brand/{id}'
    metadata:
      groupName: Brand
      groupDescription: |-

        APIs related to brands
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the brand.'
        required: true
        example: Texnomart
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image of the brand.'
        required: true
        example: '"images/1713348086.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: Texnomart
      image: '"images/1713348086.jpg"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Brand updated successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/brand/{id}'
    metadata:
      groupName: Brand
      groupDescription: |-

        APIs related to brands
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Brand deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/brands/{region}/branches'
    metadata:
      groupName: Brand
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the count of branches per brand in the specified region.'
      description: 'Retrieves the count of branches per brand within the specified region.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      region:
        name: region
        description: 'The region to filter by.'
        required: true
        example: Toshkent
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      region: Toshkent
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "name": "BrandName1",
                      "branches_count": 5
                  },
                  {
                      "id": 2,
                      "name": "BrandName2",
                      "branches_count": 3
                  },
                  ...
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
