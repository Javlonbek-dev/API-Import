openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/branch:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"data\": [\n         {\n             \"id\": 1,\n             \"name\": \"BrandName1\",\n             \"branches_count\": 5,\n             \"image\": \"images/branch1.jpg\"\n         },\n         {\n             \"id\": 2,\n             \"name\": \"BrandName2\",\n             \"branches_count\": 3,\n             \"image\": \"images/branch2.jpg\"\n         },\n         ...\n     ]\n }"
      tags:
        - Branch
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Branch created successfully'
                properties:
                  message:
                    type: string
                    example: 'Branch created successfully'
      tags:
        - Branch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the branch.'
                  example: Ishonch
                region:
                  type: string
                  description: 'The region of the branch.'
                  example: '"Toshkent"'
                district:
                  type: string
                  description: 'The district of the branch.'
                  example: '"Chilanzor"'
                image:
                  type: string
                  description: 'The image of the branch.'
                  example: '"images/1713348086.jpg"'
              required:
                - name
                - region
                - district
                - image
      security: []
  '/api/branch/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: BranchName
                  region: Region
                  district: District
                  image: images/branch3.jpg
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: BranchName
                  region:
                    type: string
                    example: Region
                  district:
                    type: string
                    example: District
                  image:
                    type: string
                    example: images/branch3.jpg
      tags:
        - Branch
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Branch updated successfully'
                properties:
                  message:
                    type: string
                    example: 'Branch updated successfully'
      tags:
        - Branch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the branch.'
                  example: Ishonch
                region:
                  type: string
                  description: 'The region of the branch.'
                  example: '"Qahqadaryo"'
                district:
                  type: string
                  description: 'The district of the branch.'
                  example: '"Kitob"'
                image:
                  type: string
                  description: 'The image of the branch.'
                  example: '"images/1713348086.jpg"'
              required:
                - name
                - region
                - district
                - image
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Branch deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Branch deleted successfully'
      tags:
        - Branch
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the branch.'
        example: 1
        required: true
        schema:
          type: integer
  /api/brand:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"data\": [\n         {\n             \"id\": 1,\n             \"name\": \"BrandName1\",\n             \"image\": \"images/brand1.jpg\"\n         },\n         {\n             \"id\": 2,\n             \"name\": \"BrandName2\",\n             \"image\": \"images/brand2.jpg\"\n         },\n         ...\n     ]\n }"
      tags:
        - Brand
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Brand created successfully'
                properties:
                  message:
                    type: string
                    example: 'Brand created successfully'
      tags:
        - Brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the brand.'
                  example: Ishonch
                image:
                  type: string
                  description: 'The image of the brand.'
                  example: '"images/1713348086.jpg"'
              required:
                - name
                - image
      security: []
  '/api/brand/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: BrandName
                  image: images/brand.jpg
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: BrandName
                  image:
                    type: string
                    example: images/brand.jpg
      tags:
        - Brand
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Brand updated successfully'
                properties:
                  message:
                    type: string
                    example: 'Brand updated successfully'
      tags:
        - Brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the brand.'
                  example: Texnomart
                image:
                  type: string
                  description: 'The image of the brand.'
                  example: '"images/1713348086.jpg"'
              required:
                - name
                - image
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Brand deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Brand deleted successfully'
      tags:
        - Brand
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the brand.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/brands/{region}/branches':
    get:
      summary: 'Get the count of branches per brand in the specified region.'
      operationId: getTheCountOfBranchesPerBrandInTheSpecifiedRegion
      description: 'Retrieves the count of branches per brand within the specified region.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"BrandName1\",\n            \"branches_count\": 5\n        },\n        {\n            \"id\": 2,\n            \"name\": \"BrandName2\",\n            \"branches_count\": 3\n        },\n        ...\n    ]\n}"
      tags:
        - Brand
      security: []
    parameters:
      -
        in: path
        name: region
        description: 'The region to filter by.'
        example: Toshkent
        required: true
        schema:
          type: string
  /api/home:
    get:
      summary: 'Show the application dashboard.'
      operationId: showTheApplicationDashboard
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: \Illuminate\Http\Response
      tags:
        - User
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User created successfully'
                properties:
                  message:
                    type: string
                    example: 'User created successfully'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john@example.com
                phone:
                  type: string
                  description: 'The phone number of the user.'
                  example: '1234567890'
                password:
                  type: string
                  description: 'The password of the user.'
                  example: password123
              required:
                - name
                - email
                - phone
                - password
      security: []
  '/api/user/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: \Illuminate\Http\Response
      tags:
        - User
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User updated successfully'
                properties:
                  message:
                    type: string
                    example: 'User updated successfully'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john@example.com
                phone:
                  type: string
                  description: 'The phone number of the user.'
                  example: '9945214620'
                password:
                  type: string
                  description: 'The password of the user.'
                  example: password1234
              required:
                - name
                - email
                - phone
                - password
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'User deleted successfully'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Branch
    description: "\nAPIs related to branch"
  -
    name: Brand
    description: "\nAPIs related to brands"
  -
    name: Endpoints
    description: ''
  -
    name: User
    description: "\nAPIs related to users"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
